<?php 

// start of page and header
include_once '../blocks/header.php';

// nav
include_once '../blocks/nav.php';

// parallax1
include_once '../blocks/parallax1.php';

// Main contant

echo ' <div class="section white">
<div class="row container">
  <h2 class="center">Возможности PHP.</h2>
    <p class="grey-text text-darken-3 lighten-3">Возможности PHP очень большие. Главным образом, область применения PHP сфокусирована на написание скриптов, работающих на стороне сервера; таким образом, PHP способен выполнять всё то, что выполняет любая другая программа CGI. Например, обрабатывать данных форм, генерировать динамические страницы, отсылать и принимать cookies. Но PHP способен выполнять и множество других задач.</p>
    <p>
    Существуют три основных области, где используется PHP.
    <ul>
        <li><i class="material-icons" style="font-size: 10px; padding-right:2px;">lens</i>Создание скриптов для выполнения на стороне сервера. PHP наиболее широко используется именно таким образом. Все, что вам понадобится, это парсер PHP (в виде программы CGI или серверного модуля), вебсервер и браузер. Чтобы Вы могли просматривать результаты выполнения PHP-скриптов в браузере, вам нужен работающий вебсервер и установленный PHP. За более подробными сведениями обратитесь к подразделу установка PHP.</li>
        <li><i class="material-icons" style="font-size: 10px; padding-right:2px;">lens</i>Создание скриптов для выполнения в командной строке. Вы можете создать PHP-скрипт, способный запускаться вне зависимости от вебсервера и браузера. Все, что вам потребуется - парсер PHP. Такой способ использования PHP идеально подходит для скриптов, которые должны выполняться регулярно, например, с помощью cron (на платформах *nix или Linux) или с помощью планировщика задач (Task Scheduler) на платформах Windows. Эти скрипты также могут быть использованы в задачах простой обработки текстов. Дополнительная информация находится здесь.</li>
        <li><i class="material-icons" style="font-size: 10px; padding-right:2px;">lens</i>Создание приложений GUI, выполняющихся на стороне клиента. Возможно, PHP является не самым лучшим языком для создания подобных приложений, но, если вы очень хорошо знаете PHP и хотели бы использовать некоторые его возможности в своих клиент-приложениях, вы можете использовать PHP-GTK для создания таких приложений. Подобным образом Вы можете создавать и кросс-платформенные приложения. PHP-GTK является расширением PHP и не поставляется вместе с дистрибутивом PHP. Если вы заинтересованы, посетите сайт PHP-GTK.</li>
    </ul>
    </p>
    <p>PHP доступен для большинства операционных систем, включая Linux, многие модификации Unix (такие, как HP-UX, Solaris и OpenBSD), Microsoft Windows, Mac OS X, RISC OS, и многих других. (Существует даже версия PHP для OS/2. Неизвестно, правда, насколько соответствующая нынешним реалиям). Также в PHP включена поддержка большинства современных вебсерверов, таких, как Apache, Microsoft Internet Information Server, Personal Web Server, серверов Netscape и iPlanet, сервера Oreilly Website Pro, Caudium, Xitami, OmniHTTPd и многих других. Для большинства серверов PHP поставляется в качестве модуля, для других, поддерживающих стандарт CGI, PHP может функционировать в качестве процессора CGI.</p>
    <p>Таким образом, выбирая PHP, вы получаете свободу выбора операционной системы и вебсервера. Кроме того, у вас появляется выбор между использованием процедурного или объектно-ориентированного программирования или же их сочетания.</p>
    <p>PHP способен не только выдавать HTML. Возможности PHP включают формирование изображений, файлов PDF и даже роликов Flash (с использованием libswf и Ming), создаваемых "на лету". PHP также способен выдавать любые текстовые данные, такие, как XHTML и другие XML-файлы. PHP способен осуществлять автоматическую генерацию таких файлов и сохранять их в файловой системе вашего сервера, вместо того, чтобы отдавать клиенту, организуя, таким образом, кеш динамического содержания, расположенный на стороне сервера.</p>
    <p>Одним из значительных преимуществ PHP является поддержка широкого круга баз данных. Создание скрипта, использующего базы данных, - очень просто. В настоящее время PHP поддерживает следующие базы данных:</p>
    
    <table class="striped">
    <tbody>
      <tr>
        <td>Adabas D</td>
        <td>Ingres</td>
        <td>Oracle (OCI7 и OCI8)</td>
      </tr>
      <tr>
        <td>dBase</td>
        <td>InterBase</td>
        <td>Ovrimos</td>
      </tr>
      <tr>
        <td>Empress</td>
        <td>FrontBase</td>
        <td>PostgreSQL</td>
      </tr>
      <tr>
        <td>FilePro (только чтение)</td>
        <td>mSQL</td>
        <td>Solid</td>
      </tr>
      <tr>
        <td>Hyperwave</td>
        <td>Direct MS-SQL</td>
        <td>Sybase</td>
      </tr>
      <tr>
        <td>IBM DB2</td>
        <td>MySQL</td>
        <td>Velocis</td>
      </tr>
      <tr>
        <td>Informix</td>
        <td>ODBC</td>
        <td>Unix dbm</td>
      </tr>
    </tbody>
  </table>
    <p>Также в PHP включена поддержка DBX для работы на абстрактном уровне, так что вы можете работать с любой базой данных, использующих DBX. Кроме того, PHP поддерживает ODBC (Open Database Connection standard), таким образом, вы можете работать с любой базой данных, поддерживающей этот всемирно признанный стандарт. Подробнее о работе PHP с СУБД здесь.</p>
    <p>PHP также поддерживает "общение" с другими сервисами с использованием таких протоколов, как LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (на платформах Windows) и многих других. Кроме того, вы получаете возможность работать с сетевыми сокетами "напрямую". PHP поддерживает стандарт обмена сложными структурами данных WDDX. Обращая внимание на взаимодействие между различными языками, следует упомянуть о поддержке объектов Java и возможности их использования в качестве объектов PHP. Для доступа к удаленным объектам вы можете использовать расширение CORBA.</p>
    <p>PHP включает средства обработки текстовой информации, начиная с регулярных выражений Perl или POSIX Extended и заканчивая парсером документов XML. Для парсинга XML используются стандарты SAX и DOM. Для преобразования документов XML вы можете использовать расширение XSLT.</p>
    <p>Последним по порядку, но не по значению, является поддержка многих других расширений, таких, как функции поисковой машины mnoGoSearch, функции IRC Gateway, функции для работы со сжатыми файлами (gzip, bz2), функции календарных вычислений, функции перевода и многое другое.</p>
    </div>
</div>';

// parallax2
include_once '../blocks/parallax2.php';

// footer
include_once '../blocks/footer.php';

// scripts and end of page
include_once '../blocks/script.php';


?>